union Playbackable = FileSource | RecordSource | Channel

enum DeviceType {
  browser
  chromecast
}

type ViewerChallenge {
  token: String!
  code: String!
}

type ViewerChallengeRequest {
  id: ID!
  requestFrom: String!
  code: String!
  type: DeviceType!
  createdAt: DateTime!
}

type ViewerChallengeResult {
  success: Boolean!
  token: String!
}

enum ViewerState {
  playing
  stopped
}

type ViewerDevice {
  id: ID!
  type: DeviceType!
  displayName: String!
  volume: Int!
  state: ViewerState!
  playingContent: Playbackable

  online: Boolean! @auth(requires: [admin])
  elapsed: Float @auth(requires: [admin])
  message: String @auth(requires: [admin])
}

type ViewerDeviceList {
  total: Int!
  devices: [ViewerDevice!]!
}

enum ViewerRequestType {
  play
  stop
  volume
}

enum ViewerSourceType {
  channel
  source
}

input ViewerRequestParam {
  device: ID!
  type: ViewerRequestType!
  sourceType: ViewerSourceType
  sourceId: ID
  volume: Int
}

enum ViewerMetricsType {
  elapsed
  error
  ping
  ended
}

input ViewerMetricsParam {
  type: ViewerMetricsType!
  elapsed: Float
  message: String
}
